apiVersion: ray.io/v1
kind: RayCluster
metadata:
  name: text-summarizer-cluster
  labels:
    app.kubernetes.io/instance: raycluster
spec:
    headServiceAnnotations:
      service.cilium.io/global: "true"
    enableInTreeAutoscaling: true
    autoscalerOptions:
      resources:
        limits:
          cpu: "500m"
          memory: "512Mi"
        requests:
          cpu: "500m"
          memory: "512Mi"
    rayVersion: '2.9.0' # Should match the Ray version in the image of the containers
    headGroupSpec:
      # The `rayStartParams` are used to configure the `ray start` command.
      # See https://github.com/ray-project/kuberay/blob/master/docs/guidance/rayStartParams.md for the default settings of `rayStartParams` in KubeRay.
      # See https://docs.ray.io/en/latest/cluster/cli.html#ray-start for all available options in `rayStartParams`.
      rayStartParams:
        dashboard-host: '0.0.0.0'
      # Pod template
      template:
        metadata:
          labels:
            elotl-luna: "true"
          annotations:
            node.elotl.co/instance-offerings: "on-demand"
        spec:
          containers:
          - name: ray-head
            image: rayproject/ray-ml:2.9.0
            ports:
            - containerPort: 6379
              name: gcs
            - containerPort: 8265
              name: dashboard
            - containerPort: 10001
              name: client
            - containerPort: 8000
              name: serve
            volumeMounts:
              - mountPath: /tmp/ray
                name: ray-logs
            resources:
              limits:
                cpu: "${RAY_HEAD_CPU_COUNT}"
                memory: "${RAY_HEAD_MEMORY_SIZE}"
              requests:
                cpu: "${RAY_HEAD_CPU_COUNT}"
                memory: "${RAY_HEAD_MEMORY_SIZE}"
          volumes:
            - name: ray-logs
              emptyDir: {}
    workerGroupSpecs:
    # The pod replicas in this group typed worker
    - replicas: ${NUM_REPLICAS}
      minReplicas: ${MIN_REPLICAS}
      maxReplicas: ${MAX_REPLICAS}
      groupName: cpu-group
      rayStartParams: {}
      # Pod template
      template:
        metadata:
          labels:
            elotl-luna: "true"
        spec:
          containers:
          - name: ray-worker
            image: rayproject/ray-ml:2.9.0
            resources:
              limits:
                cpu: "${RAY_WORKER_CPU_COUNT}"
                memory: "${RAY_WORKER_MEMORY_SIZE}"
              requests:
                cpu: "${RAY_WORKER_CPU_COUNT}"
                memory: "${RAY_WORKER_MEMORY_SIZE}"
